{
    "format_version": "0.1",
    "terraform_version": "0.12.29",
    "variables": {
        "environment": {
            "value": "dev"
        },
        "project": {
            "value": "tag"
        }
    },
    "planned_values": {
        "root_module": {
            "resources": [{
                "address": "aws_dynamodb_table.basic-dynamodb-table",
                "mode": "managed",
                "type": "aws_dynamodb_table",
                "name": "basic-dynamodb-table",
                "provider_name": "aws",
                "schema_version": 1,
                "values": {
                    "attribute": [{
                        "name": "GameTitle",
                        "type": "S"
                    }, {
                        "name": "TopScore",
                        "type": "N"
                    }, {
                        "name": "UserId",
                        "type": "S"
                    }],
                    "billing_mode": "PROVISIONED",
                    "global_secondary_index": [{
                        "hash_key": "GameTitle",
                        "name": "GameTitleIndex",
                        "non_key_attributes": ["UserId"],
                        "projection_type": "INCLUDE",
                        "range_key": "TopScore",
                        "read_capacity": 10,
                        "write_capacity": 10
                    }],
                    "hash_key": "UserId",
                    "local_secondary_index": [],
                    "name": "GameScores",
                    "range_key": "GameTitle",
                    "read_capacity": 20,
                    "replica": [],
                    "stream_enabled": null,
                    "tags": {
                        "Environment": "dev",
                        "Project": "tag"
                    },
                    "timeouts": null,
                    "ttl": [{
                        "attribute_name": "TimeToExist",
                        "enabled": false
                    }],
                    "write_capacity": 20
                }
            }, {
                "address": "aws_iam_role.iam_for_lambda",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "iam_for_lambda",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                    "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                    "description": null,
                    "force_detach_policies": false,
                    "max_session_duration": 3600,
                    "name": "iam_for_lambda",
                    "name_prefix": null,
                    "path": "/",
                    "permissions_boundary": null,
                    "tags": null
                }
            }, {
                "address": "aws_lambda_function.test_lambda",
                "mode": "managed",
                "type": "aws_lambda_function",
                "name": "test_lambda",
                "provider_name": "aws",
                "schema_version": 0,
                "values": {
                    "dead_letter_config": [],
                    "description": null,
                    "environment": [{
                        "variables": {
                            "foo": "bar"
                        }
                    }],
                    "file_system_config": [],
                    "filename": "lambda/lambda.zip",
                    "function_name": "tag-dev-dothething",
                    "handler": "lambda.handler",
                    "kms_key_arn": null,
                    "layers": null,
                    "memory_size": 128,
                    "publish": false,
                    "reserved_concurrent_executions": -1,
                    "runtime": "python3.8",
                    "s3_bucket": null,
                    "s3_key": null,
                    "s3_object_version": null,
                    "source_code_hash": "lcd5PeHmp0FvWTHcBz1VzUgvhKNgQNng7iaXvyaJd1Q=",
                    "tags": {
                        "Environment": "dev",
                        "Project": "tag"
                    },
                    "timeout": 3,
                    "timeouts": null,
                    "vpc_config": []
                }
            }]
        }
    },
    "resource_changes": [{
        "address": "aws_dynamodb_table.basic-dynamodb-table",
        "mode": "managed",
        "type": "aws_dynamodb_table",
        "name": "basic-dynamodb-table",
        "provider_name": "aws",
        "change": {
            "actions": ["create"],
            "before": null,
            "after": {
                "attribute": [{
                    "name": "GameTitle",
                    "type": "S"
                }, {
                    "name": "TopScore",
                    "type": "N"
                }, {
                    "name": "UserId",
                    "type": "S"
                }],
                "billing_mode": "PROVISIONED",
                "global_secondary_index": [{
                    "hash_key": "GameTitle",
                    "name": "GameTitleIndex",
                    "non_key_attributes": ["UserId"],
                    "projection_type": "INCLUDE",
                    "range_key": "TopScore",
                    "read_capacity": 10,
                    "write_capacity": 10
                }],
                "hash_key": "UserId",
                "local_secondary_index": [],
                "name": "GameScores",
                "range_key": "GameTitle",
                "read_capacity": 20,
                "replica": [],
                "stream_enabled": null,
                "tags": {
                    "Environment": "dev",
                    "Project": "tag"
                },
                "timeouts": null,
                "ttl": [{
                    "attribute_name": "TimeToExist",
                    "enabled": false
                }],
                "write_capacity": 20
            },
            "after_unknown": {
                "arn": true,
                "attribute": [{}, {}, {}],
                "global_secondary_index": [{
                    "non_key_attributes": [false]
                }],
                "id": true,
                "local_secondary_index": [],
                "point_in_time_recovery": true,
                "replica": [],
                "server_side_encryption": true,
                "stream_arn": true,
                "stream_label": true,
                "stream_view_type": true,
                "tags": {},
                "ttl": [{}]
            }
        }
    }, {
        "address": "aws_iam_role.iam_for_lambda",
        "mode": "managed",
        "type": "aws_iam_role",
        "name": "iam_for_lambda",
        "provider_name": "aws",
        "change": {
            "actions": ["create"],
            "before": null,
            "after": {
                "assume_role_policy": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n",
                "description": null,
                "force_detach_policies": false,
                "max_session_duration": 3600,
                "name": "iam_for_lambda",
                "name_prefix": null,
                "path": "/",
                "permissions_boundary": null,
                "tags": null
            },
            "after_unknown": {
                "arn": true,
                "create_date": true,
                "id": true,
                "unique_id": true
            }
        }
    }, {
        "address": "aws_lambda_function.test_lambda",
        "mode": "managed",
        "type": "aws_lambda_function",
        "name": "test_lambda",
        "provider_name": "aws",
        "change": {
            "actions": ["create"],
            "before": null,
            "after": {
                "dead_letter_config": [],
                "description": null,
                "environment": [{
                    "variables": {
                        "foo": "bar"
                    }
                }],
                "file_system_config": [],
                "filename": "lambda/lambda.zip",
                "function_name": "tag-dev-dothething",
                "handler": "lambda.handler",
                "kms_key_arn": null,
                "layers": null,
                "memory_size": 128,
                "publish": false,
                "reserved_concurrent_executions": -1,
                "runtime": "python3.8",
                "s3_bucket": null,
                "s3_key": null,
                "s3_object_version": null,
                "source_code_hash": "lcd5PeHmp0FvWTHcBz1VzUgvhKNgQNng7iaXvyaJd1Q=",
                "tags": {
                    "Environment": "dev",
                    "Project": "tag"
                },
                "timeout": 3,
                "timeouts": null,
                "vpc_config": []
            },
            "after_unknown": {
                "arn": true,
                "dead_letter_config": [],
                "environment": [{
                    "variables": {}
                }],
                "file_system_config": [],
                "id": true,
                "invoke_arn": true,
                "last_modified": true,
                "qualified_arn": true,
                "role": true,
                "source_code_size": true,
                "tags": {},
                "tracing_config": true,
                "version": true,
                "vpc_config": []
            }
        }
    }],
    "prior_state": {
        "format_version": "0.1",
        "terraform_version": "0.12.29",
        "values": {
            "root_module": {
                "resources": [{
                    "address": "data.archive_file.init",
                    "mode": "data",
                    "type": "archive_file",
                    "name": "init",
                    "provider_name": "archive",
                    "schema_version": 0,
                    "values": {
                        "excludes": null,
                        "id": "4643b291d6f25d0d78f9e39ed2ab802b5b12c8f6",
                        "output_base64sha256": "lcd5PeHmp0FvWTHcBz1VzUgvhKNgQNng7iaXvyaJd1Q=",
                        "output_md5": "f62303e770424cba12563b84f7eb393a",
                        "output_path": "./lambda/lambda.zip",
                        "output_sha": "4643b291d6f25d0d78f9e39ed2ab802b5b12c8f6",
                        "output_size": 209,
                        "source": [],
                        "source_content": null,
                        "source_content_filename": null,
                        "source_dir": null,
                        "source_file": "./lambda/lambda.py",
                        "type": "zip"
                    }
                }]
            }
        }
    },
    "configuration": {
        "provider_config": {
            "aws": {
                "name": "aws",
                "version_constraint": "~\u003e 3.0",
                "expressions": {
                    "region": {
                        "constant_value": "eu-west-1"
                    }
                }
            }
        },
        "root_module": {
            "resources": [{
                "address": "aws_dynamodb_table.basic-dynamodb-table",
                "mode": "managed",
                "type": "aws_dynamodb_table",
                "name": "basic-dynamodb-table",
                "provider_config_key": "aws",
                "expressions": {
                    "attribute": [{
                        "name": {
                            "constant_value": "UserId"
                        },
                        "type": {
                            "constant_value": "S"
                        }
                    }, {
                        "name": {
                            "constant_value": "GameTitle"
                        },
                        "type": {
                            "constant_value": "S"
                        }
                    }, {
                        "name": {
                            "constant_value": "TopScore"
                        },
                        "type": {
                            "constant_value": "N"
                        }
                    }],
                    "billing_mode": {
                        "constant_value": "PROVISIONED"
                    },
                    "global_secondary_index": [{
                        "hash_key": {
                            "constant_value": "GameTitle"
                        },
                        "name": {
                            "constant_value": "GameTitleIndex"
                        },
                        "non_key_attributes": {
                            "constant_value": ["UserId"]
                        },
                        "projection_type": {
                            "constant_value": "INCLUDE"
                        },
                        "range_key": {
                            "constant_value": "TopScore"
                        },
                        "read_capacity": {
                            "constant_value": 10
                        },
                        "write_capacity": {
                            "constant_value": 10
                        }
                    }],
                    "hash_key": {
                        "constant_value": "UserId"
                    },
                    "name": {
                        "constant_value": "GameScores"
                    },
                    "range_key": {
                        "constant_value": "GameTitle"
                    },
                    "read_capacity": {
                        "constant_value": 20
                    },
                    "tags": {
                        "references": ["local.tags"]
                    },
                    "ttl": [{
                        "attribute_name": {
                            "constant_value": "TimeToExist"
                        },
                        "enabled": {
                            "constant_value": false
                        }
                    }],
                    "write_capacity": {
                        "constant_value": 20
                    }
                },
                "schema_version": 1
            }, {
                "address": "aws_iam_role.iam_for_lambda",
                "mode": "managed",
                "type": "aws_iam_role",
                "name": "iam_for_lambda",
                "provider_config_key": "aws",
                "expressions": {
                    "assume_role_policy": {
                        "constant_value": "{\n  \"Version\": \"2012-10-17\",\n  \"Statement\": [\n    {\n      \"Action\": \"sts:AssumeRole\",\n      \"Principal\": {\n        \"Service\": \"lambda.amazonaws.com\"\n      },\n      \"Effect\": \"Allow\",\n      \"Sid\": \"\"\n    }\n  ]\n}\n"
                    },
                    "name": {
                        "constant_value": "iam_for_lambda"
                    }
                },
                "schema_version": 0
            }, {
                "address": "aws_lambda_function.test_lambda",
                "mode": "managed",
                "type": "aws_lambda_function",
                "name": "test_lambda",
                "provider_config_key": "aws",
                "expressions": {
                    "environment": [{
                        "variables": {
                            "constant_value": {
                                "foo": "bar"
                            }
                        }
                    }],
                    "filename": {
                        "constant_value": "lambda/lambda.zip"
                    },
                    "function_name": {
                        "references": ["local.lambda_name"]
                    },
                    "handler": {
                        "constant_value": "lambda.handler"
                    },
                    "role": {
                        "references": ["aws_iam_role.iam_for_lambda"]
                    },
                    "runtime": {
                        "constant_value": "python3.8"
                    },
                    "source_code_hash": {
                        "references": ["data.archive_file.init"]
                    },
                    "tags": {
                        "references": ["local.tags"]
                    }
                },
                "schema_version": 0
            }, {
                "address": "data.archive_file.init",
                "mode": "data",
                "type": "archive_file",
                "name": "init",
                "provider_config_key": "archive",
                "expressions": {
                    "output_path": {
                        "references": ["path.module"]
                    },
                    "source_file": {
                        "references": ["path.module"]
                    },
                    "type": {
                        "constant_value": "zip"
                    }
                },
                "schema_version": 0
            }],
            "variables": {
                "environment": {
                    "description": "Environment this should be deployed to"
                },
                "project": {
                    "description": "What project this resource belongs to"
                }
            }
        }
    }
}